FROM hub.baidubce.com/paddlepaddle-sz/cuda:9.2-cudnn7-devel-ubuntu16.04
COPY packages/sys/sources.list /etc/apt/
SHELL ["/bin/bash","-c"]
RUN set -x && \
    apt-get update && \
    apt-get install -y --no-install-recommends ssh wget unzip git vim lrzsz && \
    apt-get install -y --no-install-recommends libglib2.0-0 libsm6 libxext6 libxrender1 && \
    ln -sf /usr/include/cudnn.h /usr/local/cuda/include/cudnn.h && \
    ln -sf /usr/lib/x86_64-linux-gnu/libcudnn.so /usr/local/cuda/lib64/libcudnn.so && \
    ln -sf /usr/lib/x86_64-linux-gnu/libcudnn_static.a /usr/local/cuda/lib64/libcudnn_static.a && \
    ln -sf /usr/lib/x86_64-linux-gnu/libcudnn.so.7.6.5 /usr/local/cuda/lib64/libcudnn.so.7 && \
    ln -sf /usr/lib/x86_64-linux-gnu/libcudnn.so.7.6.5 /usr/local/cuda/lib64/libcudnn.so.7.6.5  && \
    mkdir -p /root/projects/ && \
    mkdir -p /root/projects/infer_lib/ && \
    mkdir -p /root/projects/models/ && \
    mkdir -p /root/downloads/ && cd /root/downloads && \
    wget -c https://paddleseg.bj.bcebos.com/deploy/docker/nv-tensorrt-repo-ubuntu1604-cuda9.0-trt5.1.5.0-ga-20190427_1-1_amd64.deb && \
    dpkg -i nv-tensorrt-repo-ubuntu1604-cuda9.0-trt5.1.5.0-ga-20190427_1-1_amd64.deb && \
    apt-key add /var/nv-tensorrt-repo-cuda9.0-trt5.1.5.0-ga-20190427/7fa2af80.pub && \
    apt-get update && \
    apt-get install -y --no-install-recommends libnvinfer5=5.1.5-1+cuda9.0 && \
    apt-get install -y --no-install-recommends libnvinfer-dev=5.1.5-1+cuda9.0 && \
    wget -c https://paddleseg.bj.bcebos.com/deploy/docker/paddlepaddle_gpu-1.6.1-cp37-cp37m-linux_x86_64.whl && \
    wget -c https://paddleseg.bj.bcebos.com/deploy/docker/gcc-4.8.5.tar.bz2 && \
    tar xvfj gcc-4.8.5.tar.bz2 && \
    mv gcc-4.8.5 /usr/local/ && \
    echo "alias ll='ls -lF'" >> /root/.bashrc && \
    echo "export CC=/usr/local/gcc-4.8.5/bin/gcc" >> /root/.bashrc && \
    echo "export CXX=/usr/local/gcc-4.8.5/bin/g++" >> /root/.bashrc && \
    wget -c https://paddleseg.bj.bcebos.com/inference/cmake-3.15.0.tar.gz && \
    tar xvf cmake-3.15.0.tar.gz && \
    cd cmake-3.15.0 && \
    mkdir -p build && cd build && \
    ../configure && \
    make -j12 && make install && \ 
    cd /root/downloads/ && \
    wget -c https://paddleseg.bj.bcebos.com/deploy/docker/opencv3gcc4.8.tar.bz2 && \
    tar xvfj opencv3gcc4.8.tar.bz2 && \
    mv opencv3gcc4.8 /root/projects/infer_lib/ && \ 
    wget -c https://paddle-inference-lib.bj.bcebos.com/1.6.2-gpu-cuda9-cudnn7-avx-mkl-trt5/fluid_inference.tgz && \
    tar xvf fluid_inference.tgz && \
    mv fluid_inference /root/projects/infer_lib/ && \
    wget -c https://paddleseg.bj.bcebos.com/deploy/docker/PaddleDetection.tar.bz2 && \
    tar xvfj PaddleDetection.tar.bz2 && \
    mv PaddleDetection /root/projects/ && \
    wget -c https://paddleseg.bj.bcebos.com/deploy/docker/PaddleSeg.tar.bz2 && \
    tar xvfj PaddleSeg.tar.bz2 && \
    mv PaddleSeg /root/projects/ && \
    wget -c https://paddleseg.bj.bcebos.com/deploy/docker/Miniconda3-latest-Linux-x86_64.sh && \
    sh ./Miniconda3-latest-Linux-x86_64.sh -b -p /root/miniconda3/ && \
    export PATH="/root/miniconda3/bin:$PATH" && \
    conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/ && \
    conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/ && \
    conda config --set show_channel_urls yes && \
    conda create -y --name py3.7 python=3.7 && \
    source /root/miniconda3/etc/profile.d/conda.sh && \
    conda init && \
    echo "conda activate py3.7" >> /root/.bashrc && \
    conda activate py3.7 && \
    pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple && \
    conda install -y numpy && \
    conda install -y pyyaml && \
    pip install futures && \
    pip install opencv-python && \
    pip install python-gflags && \
    pip install cython && \
    pip install pycocotools && \
    pip install -r /root/projects/PaddleDetection/requirements.txt && \
    pip install -r /root/projects/PaddleSeg/deploy/python/requirements.txt && \
    pip install ./paddlepaddle_gpu-1.6.1-cp37-cp37m-linux_x86_64.whl && \
    wget -c https://paddleseg.bj.bcebos.com/deploy/docker/humanseg_origin.tar.bz2 && \
    tar xvfj humanseg_origin.tar.bz2 && \
    mv humanseg_origin /root/projects/models/ && \
    wget -c https://paddleseg.bj.bcebos.com/deploy/docker/humanseg_pr.tar.bz2 && \
    tar xvfj humanseg_pr.tar.bz2 && \
    mv humanseg_pr /root/projects/models/ && \
    cd /root/projects/PaddleSeg/deploy/cpp/ && \
    mkdir build && cd build && \
    wget -c https://paddleseg.bj.bcebos.com/deploy/docker/seg_cpp_build.sh && \
    rm -rf /root/downloads/
WORKDIR /root/
